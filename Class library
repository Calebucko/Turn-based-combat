Class Character(object):
intialize class [__init__(self)]
create @property for fighter, return name(must contain string)
define name setter  variable for fighter
create @property for health(must be integer, can't be negative)
define health variable for fighter
create @property for hit change(must be integer, modulus?)
define hit chance variable
attach to number generator using percentages?
@property for max damage of fighter (must be integer, can't be negative)
define max damage variable
apply comparison operators so it doesn't go over set value
@property for armor value(integer, not negative)
define armor value variable

printstats method:
    read value for health, hit chance, max damage, and armor value
    print in f string 


Class Combat
define method for hit
    use hit chance for percentage
    damage must be in range 1-max damage
    recipient subtracts damage from hitpoints
    recipient adds back armor rating if they have it

define function for fight
    use hit method to calculate damage against recipient
    print damage for recipient
    if recipient has not reached hitpoints ==0, then switch turns
    otherwise, end the fight and print "[Character] reigns victorious.
